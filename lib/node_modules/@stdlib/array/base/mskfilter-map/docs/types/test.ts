/*
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

import mskfilterMap = require( './index' );

function clbk( value: number ): number {
	return value;
}

// TESTS //

// The function returns an array...
{
	mskfilterMap( [ 1, 2, 3, 4 ], [ 0, 0 ], clbk ); // $ExpectType number[]
	mskfilterMap( [ 1, 2, 3, 4 ], [ 0, 0 ], clbk, {} ); // $ExpectType number[]
	mskfilterMap<any>( [ 1, 2, 3, 4 ], [ 0, 0 ], clbk ); // $ExpectType any[]
	mskfilterMap<any>( [ 1, 2, 3, 4 ], [ 0, 0 ], clbk, {} ); // $ExpectType any[]
	mskfilterMap<number>( [ 1, 2, 3, 4 ], [ 0, 0 ], clbk ); // $ExpectType number[]
	mskfilterMap<number>( [ 1, 2, 3, 4 ], [ 0, 0 ], clbk, {} ); // $ExpectType number[]
	mskfilterMap<string>( [ '1', '2', '3', '4' ], [ 0, 0 ], clbk ); // $ExpectType string[]
	mskfilterMap<string>( [ '1', '2', '3', '4' ], [ 0, 0 ], clbk, {} ); // $ExpectType string[]
}

// The compiler throws an error if the function is provided a first argument which is not an array-like object...
{
	mskfilterMap( 1, [ 0, 0 ], clbk ); // $ExpectError
	mskfilterMap( true, [ 0, 0 ], clbk ); // $ExpectError
	mskfilterMap( false, [ 0, 0 ], clbk ); // $ExpectError
	mskfilterMap( null, [ 0, 0 ], clbk ); // $ExpectError
	mskfilterMap( void 0, [ 0, 0 ], clbk ); // $ExpectError
	mskfilterMap( {}, [ 0, 0 ], clbk ); // $ExpectError

	mskfilterMap( 1, [ 0, 0 ], clbk, {} ); // $ExpectError
	mskfilterMap( true, [ 0, 0 ], clbk, {} ); // $ExpectError
	mskfilterMap( false, [ 0, 0 ], clbk, {} ); // $ExpectError
	mskfilterMap( null, [ 0, 0 ], clbk, {} ); // $ExpectError
	mskfilterMap( void 0, [ 0, 0 ], clbk, {} ); // $ExpectError
	mskfilterMap( {}, [ 0, 0 ], clbk, {} ); // $ExpectError
}

// The compiler throws an error if the function is provided a second argument which is not an array-like object containing numbers...
{
	mskfilterMap( [], 1, clbk ); // $ExpectError
	mskfilterMap( [], true, clbk ); // $ExpectError
	mskfilterMap( [], false, clbk ); // $ExpectError
	mskfilterMap( [], null, clbk ); // $ExpectError
	mskfilterMap( [], void 0, clbk ); // $ExpectError
	mskfilterMap( [], {}, clbk ); // $ExpectError

	mskfilterMap( [], 1, clbk, {} ); // $ExpectError
	mskfilterMap( [], true, clbk, {} ); // $ExpectError
	mskfilterMap( [], false, clbk, {} ); // $ExpectError
	mskfilterMap( [], null, clbk, {} ); // $ExpectError
	mskfilterMap( [], void 0, clbk, {} ); // $ExpectError
	mskfilterMap( [], {}, clbk, {} ); // $ExpectError
}

// The compiler throws an error if the function is provided a third argument which is not a valid callback...
{
	const x = [1, 2];

	mskfilterMap( x, [ 2, 2 ], 'abc' ); // $ExpectError
	mskfilterMap( x, [ 2, 2 ], 3.14 ); // $ExpectError
	mskfilterMap( x, [ 2, 2 ], true ); // $ExpectError
	mskfilterMap( x, [ 2, 2 ], false ); // $ExpectError
	mskfilterMap( x, [ 2, 2 ], null ); // $ExpectError
	mskfilterMap( x, [ 2, 2 ], [ '1' ] ); // $ExpectError
	mskfilterMap( x, [ 2, 2 ], {} ); // $ExpectError

	mskfilterMap( x, [ 2, 2 ], 'abc', {} ); // $ExpectError
	mskfilterMap( x, [ 2, 2 ], 3.14, {} ); // $ExpectError
	mskfilterMap( x, [ 2, 2 ], true, {} ); // $ExpectError
	mskfilterMap( x, [ 2, 2 ], false, {} ); // $ExpectError
	mskfilterMap( x, [ 2, 2 ], null, {} ); // $ExpectError
	mskfilterMap( x, [ 2, 2 ], [ '1' ], {} ); // $ExpectError
	mskfilterMap( x, [ 2, 2 ], {}, {} ); // $ExpectError
}

// The compiler throws an error if the function is provided an unsupported number of arguments...
{
	const x = [ 1.0, 2.0 ];

	mskfilterMap(); // $ExpectError
	mskfilterMap( x ); // $ExpectError
	mskfilterMap( x, [ 2, 2 ] ); // $ExpectError
	mskfilterMap( x, [ 2, 2 ], clbk, {}, {} ); // $ExpectError
}
